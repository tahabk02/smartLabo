import type { DocumentInitParameters } from 'pdfjs-dist/types/src/display/api.js';
import { ImageResult } from './ImageResult.cjs';
import { InfoResult } from './InfoResult.cjs';
import type { ParseParameters } from './ParseParameters.cjs';
import { ScreenshotResult } from './ScreenshotResult.cjs';
import { TableResult } from './TableResult.cjs';
import { TextResult } from './TextResult.cjs';
export declare class PDFParse {
    private readonly options;
    private doc;
    progress: {
        loaded: number;
        total: number;
    };
    constructor(options: DocumentInitParameters);
    destroy(): Promise<void>;
    static get isNodeJS(): boolean;
    static setWorker(workerSrc?: string): string;
    getInfo(params?: ParseParameters): Promise<InfoResult>;
    private getPageLinks;
    getText(params?: ParseParameters): Promise<TextResult>;
    private load;
    private shouldParse;
    private getPageText;
    private getHyperlinks;
    getImage(params?: ParseParameters): Promise<ImageResult>;
    private convertToRGBA;
    private resolveEmbeddedImage;
    getScreenshot(params?: ParseParameters): Promise<ScreenshotResult>;
    getTable(params?: ParseParameters): Promise<TableResult>;
    private getPathGeometry;
    private getPageTables;
    private fillPageTables;
}
