const mongoose = require("mongoose");

// ==========================================
// ðŸ§ª CATALOGUE DES ANALYSES
// ==========================================
const analysisSchema = new mongoose.Schema(
  {
    // Code unique de l'analyse
    code: {
      type: String,
      required: [true, "Le code est requis"],
      unique: true,
      uppercase: true,
      trim: true,
    },

    // Nom de l'analyse
    name: {
      type: String,
      required: [true, "Le nom est requis"],
      trim: true,
    },

    // CatÃ©gorie
    category: {
      type: String,
      required: [true, "La catÃ©gorie est requise"],
      enum: [
        "HÃ©matologie",
        "Biochimie",
        "Immunologie",
        "Microbiologie",
        "Parasitologie",
        "Hormonologie",
        "SÃ©rologie",
        "Toxicologie",
        "Autre",
      ],
    },

    // Description
    description: {
      type: String,
      trim: true,
    },

    // Prix
    price: {
      type: Number,
      required: [true, "Le prix est requis"],
      min: [0, "Le prix doit Ãªtre positif"],
    },

    // Plage normale de rÃ©sultats
    normalRange: {
      type: String,
      trim: true,
    },

    // DÃ©lai de traitement
    turnaroundTime: {
      type: String,
      default: "24 hours",
    },

    // Type d'Ã©chantillon requis
    sampleType: {
      type: String,
      enum: ["Sang", "Urine", "Selles", "Salive", "Autre"],
      default: "Sang",
    },

    // Instructions de prÃ©lÃ¨vement
    instructions: {
      type: String,
      trim: true,
    },

    // Statut actif/inactif
    isActive: {
      type: Boolean,
      default: true,
    },

    // MÃ©tadonnÃ©es
    createdBy: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
    },
    updatedBy: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
    },
  },
  {
    timestamps: true,
  }
);

// ==========================================
// ðŸ”¹ INDEX
// ==========================================
analysisSchema.index({ code: 1 });
analysisSchema.index({ name: 1 });
analysisSchema.index({ category: 1 });
analysisSchema.index({ isActive: 1 });

// ==========================================
// ðŸ”¹ EXPORT MODEL (avec protection contre l'Ã©crasement)
// ==========================================
module.exports =
  mongoose.models.Analysis || mongoose.model("Analysis", analysisSchema);
